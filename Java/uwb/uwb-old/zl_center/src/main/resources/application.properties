#服务名
spring.application.name=uwb-center
#########################
####本服务端口
server.port=11000
kafka.ip=192.168.10.232
kafka.port=9092
kafka.producer.topic=uwb_center_topic
kafka.consumer.topic=uwb_original_topic

redis.ip=192.168.10.232
redis.password=uwb!2018@0511_zl
redis.port=6379

############DomeOs部署##############
#zookeeper地址
register.servers=192.168.10.232
env.registry.kafka=${kafka.ip}:${kafka.port}
env.registry.servers=${register.servers}
#模块名
env.registry.module=mia-uwb
env.registry.node=1
env.registry.remote=0
env.registry.conf.remote=0
##############################

#统一控制接口前缀
server.context-path=/uwb/center
#######################################################
#######################Redis###########################
#######################################################
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=6
# Redis服务器地址
spring.redis.host=${redis.ip}
# Redis服务器连接端口
spring.redis.port=${redis.port}
 #Redis服务器连接密码（默认为空）
spring.redis.password=${redis.password}
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=2000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
# 连接超时时间（毫秒）
spring.redis.timeout=0
#################kafka######################
######consumer#########
spring.kafka.consumer.bootstrapServers=${kafka.ip}:${kafka.port}
spring.kafka.consumer.topic=${kafka.consumer.topic}
spring.kafka.consumer.autoOffsetReset=latest
spring.kafka.consumer.groupId=${spring.application.name}-consumer-gid
spring.kafka.consumer.clientId=${spring.application.name}-consumer-cid
spring.kafka.consumer.autoCommit=false
spring.kafka.consumer.autoCommitInterval=100
spring.kafka.consumer.maxPollRecords=1000
spring.kafka.consumer.ackCount=1000
spring.kafka.consumer.ackTime=2000
spring.kafka.consumer.concurrency=4
spring.kafka.consumer.pollTimeout=300000
spring.kafka.consumer.batchListener=true
spring.kafka.consumer.sessionTimeout=15000
########producer#########
spring.kafka.producer.bootstrapServers=${kafka.ip}:${kafka.port}
spring.kafka.producer.topic=${kafka.producer.topic}
spring.kafka.producer.listener=true
spring.kafka.producer.acks=all
spring.kafka.producer.bufferMemory=33554432
spring.kafka.producer.clientId=${spring.application.name}-producer-cid
spring.kafka.producer.compressionType=gzip
spring.kafka.producer.batchSize=16384
spring.kafka.producer.lingerMs=10
spring.kafka.producer.retries=2







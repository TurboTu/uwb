context.listener.classes=com.zhilutec.netty.threadConfig.StartupEvent
###########dynamic params##############
server.ip=localhost
kafka.ip=localhost
#########升级文件服务器配置#####
upgrade.ip=localhost
upgrade.port=80

kafka.port=9092
kafka.topic=uwb

redis.password=uwb!2018@0511_zl
redis.port =6379
######本服务端口#########
server.port=9903
###########dynamic params############

#统一控制接口前缀
server.context-path=/producer
#服务名,向eureka注册时的名字
spring.application.name: producer
docker.mysql.host=uwb_mysql
dokcer.redis.host=uwb_redis
docker.eureka.host=uwb_eureka


#关闭自我保护
#eureka.server.enableSelfPreservation: false
#eureka.instance.prefer-ip-address=true
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
#eureka.instance.lease-expiration-duration-in-seconds=10
#eureka.instance.lease-renewal-interval-in-seconds=5
#eureka.client.healthcheck.enable=true
#eureka.client.serviceUrl.defaultZone:http://${server.ip}:8761/eureka/

#server.servlet.context-path=/producer
#######################################################
################logger#################################
#######################################################
#日志配置文件
logging.config=classpath:logback-spring.xml
#######################################################
#######################Redis###########################
#######################################################
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=5
# Redis服务器地址
spring.redis.host=${server.ip}
# Redis服务器连接端口
spring.redis.port=${redis.port}
# Redis服务器连接密码（默认为空）
spring.redis.password=${redis.password}
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=100
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
# 连接超时时间（毫秒）
spring.redis.timeout=0
spring.data.redis.repositories.enabled=true
#######################################################
####################kafka##########################
#######################################################
spring.kafka.producer.bootstrap-servers=${kafka.ip}:${kafka.port}
spring.kafka.producer.topic=${kafka.topic}

#服务名
spring.application.name:uwb-center
#########################
####本服务端口
server.port=11000

mysql.ip=localhost
mysql.port=3306
mysql.username=root
mysql.password=root

kafka.ip=localhost
#kafka.ip=192.168.10.232
kafka.port=9092
kafka.producer.topic=uwb_center_topic
kafka.consumer.topic=uwb_original_topic

redis.ip=localhost
redis.password=uwb!2018@0511_zl
redis.port=6379

#zookeeper地址
register.servers=localhost
############DemoOs部署###
env.registry.kafka=${kafka.ip}:${kafka.port}
env.registry.servers=${register.servers}
#模块名
env.registry.module=mia-uwb
env.registry.node=1

env.registry.remote=0
env.registry.conf.remote=0
#######################
#统一控制接口前缀
server.context-path=/uwb/center
########################################################
##############datasource##################################
########################################################
spring.datasource.url=jdbc:mysql://${mysql.ip}:${mysql.port}/uwb?useUnicode=true&characterEncoding=utf-8
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=${mysql.username}
spring.datasource.password=${mysql.password}
# 连接池配置,下面配置说明请参考Druid Github Wiki，配置_DruidDataSource参考配置
spring.datasource.druid.initialSize=2
spring.datasource.druid.minIdle=2
spring.datasource.druid.maxActive=30
#######################################################
####################tk.mybatis#########################
#######################################################
#mybatis config 指定配置文件路径
#mybatis.config-location=classpath:mybatis/config.xml
mapper.mappers=com.zhilutec.common.mappers.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
#mybatis mapper
mybatis.mapper-locations=classpath:dao/*Dao.xml
#mybatis config
mybatis.config-location=classpath:mybatis/config.xml
#mybatis.executorType=simple
mybatis.type-aliases-package=com.zhilutec.db.entities
mybatis.type-handlers-package=com.zhilutec.db.daos
######蛇底转驼峰
#mybatis.configuration.map-underscore-to-camel-case=true
######显示值为空的列
#mybatis.configuration.call-setters-on-nulls=true
#######################################################
######################tpageHelper######################
#######################################################
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#######################################################
####################logger############################
#######################################################
#logging.level.tk.mybatis=TRACE
#指定日志配置文件路径
#logging.config=classpath:logback-spring.xml
#mybaits sql show###显示SQL语句部分
#logging.level.com.zhilutec.dbs.daos=debug
#######################################################
#######################Redis###########################
#######################################################
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=6
# Redis服务器地址
spring.redis.host=${redis.ip}
# Redis服务器连接端口
spring.redis.port=${redis.port}
 #Redis服务器连接密码（默认为空）
spring.redis.password=${redis.password}
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=2000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
# 连接超时时间（毫秒）
spring.redis.timeout=0
#################kafka######################
#################consumer#########
spring.kafka.consumer.bootstrapServers=${kafka.ip}:${kafka.port}
spring.kafka.consumer.topic=${kafka.consumer.topic}
spring.kafka.consumer.clientId=${spring.application.name}-consumer-cid
#自动commmit设置
spring.kafka.consumer.autoOffsetReset=latest
#是否自动commit
spring.kafka.consumer.autoCommit=false
#自动commit间隔
spring.kafka.consumer.autoCommitInterval=1000
spring.kafka.consumer.groupId=uwb-center-gid
#一次从kafka中poll出来的数据条数
#max.poll.records条数据需要在在session.timeout.ms这个时间内处理完
spring.kafka.consumer.maxPollRecords=1000
#拉取maxPollRecords个消息的超时时间
spring.kafka.consumer.maxPollIntervalMs=10000
#AckMode为COUNT_TIME或COUNT是限制最多未提交offset的数量
spring.kafka.consumer.ackCount=1000
#AckMode为COUNT_TIME或TIME时设置多久commit一次
spring.kafka.consumer.ackTime=2000
#消费线程的数量
spring.kafka.consumer.concurrency=4
#服务端poll超时时间设置
spring.kafka.consumer.pollTimeout=300000
#是否批量消费
spring.kafka.consumer.batchListener=true
#Consumer session 过期时间。这个值必须设置在broker configuration中的group.min.session.timeout.ms 与 group.max.session.timeout.ms之间。
#默认为10000ms
spring.kafka.consumer.sessionTimeout=60000

#################producer#########
spring.kafka.producer.bootstrapServers=${kafka.ip}:${kafka.port}
spring.kafka.producer.topic=${kafka.producer.topic}
spring.kafka.producer.listener=true
spring.kafka.producer.acks=all
spring.kafka.producer.bufferMemory=33554432
spring.kafka.producer.clientId=${spring.application.name}-producer-cid
spring.kafka.producer.compressionType=gzip
spring.kafka.producer.batchSize=16384
spring.kafka.producer.lingerMs=10
spring.kafka.producer.retries=2






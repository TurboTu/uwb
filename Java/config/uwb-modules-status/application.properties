#\u670D\u52A1\u540D
spring.application.name=uwb-status
####\u670D\u52A1\u7AEF\u53E3###
server.port=11004

mysql.ip=192.168.10.232
mysql.port=3306
mysql.username=root
mysql.password=root

kafka.ip=192.168.10.232
kafka.port=9092
kafka.consumer.topic=uwb_original_topic

redis.ip=192.168.10.232
redis.password=uwb!2018@0511_zl
redis.port=6379

############DomeOs\u90E8\u7F72###
#zookeeper\u5730\u5740
register.servers=192.168.10.232
env.registry.kafka=${kafka.ip}:${kafka.port}
env.registry.servers=${register.servers}
#\u6A21\u5757\u540D
env.registry.module=mia-uwb-status
env.registry.node=1
env.registry.remote=0
env.registry.conf.remote=0
#\u7EDF\u4E00\u63A7\u5236\u63A5\u53E3\u524D\u7F00
server.context-path=/uwb/storage
########################################################
###datasource
########################################################
spring.datasource.url=jdbc:mysql://${mysql.ip}:${mysql.port}/uwb?useUnicode=true&characterEncoding=utf-8
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=${mysql.username}
spring.datasource.password=${mysql.password}
# \u8FDE\u63A5\u6C60\u914D\u7F6E,\u4E0B\u9762\u914D\u7F6E\u8BF4\u660E\u8BF7\u53C2\u8003Druid Github Wiki\uFF0C\u914D\u7F6E_DruidDataSource\u53C2\u8003\u914D\u7F6E
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
#\u7528\u6765\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684sql\uFF0C\u8981\u6C42\u662F\u4E00\u4E2A\u67E5\u8BE2\u8BED\u53E5\uFF0C\u5E38\u7528select 'x'\u3002\u5982\u679CvalidationQuery\u4E3Anull\uFF0CtestOnBorrow\u3001testOnReturn\u3001testWhileIdle\u90FD\u4E0D\u4F1A\u8D77\u4F5C\u7528\u3002
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
#\u7533\u8BF7\u8FDE\u63A5\u65F6\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\uFF0C\u505A\u4E86\u8FD9\u4E2A\u914D\u7F6E\u4F1A\u964D\u4F4E\u6027\u80FD\u3002
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899\uFF08\u9632\u6B62SQL\u6CE8\u5165\uFF09
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#spring.datasource.logSlowSql=true
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true

#######################################################
###tk.mybatis
#######################################################
#mybatis config \u6307\u5B9A\u914D\u7F6E\u6587\u4EF6\u8DEF\u5F84
mapper.mappers=com.zhilutec.uwb.common.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
#mybatis mapper
#mybatis config
mybatis.config-location=classpath:mybatis/config.xml
#mybatis.executorType=simple
mybatis.type-aliases-package=com.zhilutec.uwb.entity
mybatis.type-handlers-package=com.zhilutec.uwb.dao
#######################################################
###tpageHelper
#######################################################
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#######################################################
###logger
#######################################################
#logging.level.tk.mybatis=TRACE
#mybaits sql show###\u663E\u793ASQL\u8BED\u53E5\u90E8\u5206
#logging.level.com.zhilutec.dbs.daos=warn

#######################################################
#######################Redis###########################
#######################################################
# REDIS (RedisProperties)
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=6
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=${redis.ip}
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=${redis.port}
#Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=${redis.password}
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=2000
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=100
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=5
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=0

#################kafka######################
#################consumer#########
spring.kafka.consumer.bootstrapServers=${kafka.ip}:${kafka.port}
spring.kafka.consumer.topic=${kafka.consumer.topic}
#\u81EA\u52A8commmit\u8BBE\u7F6E
spring.kafka.consumer.autoOffsetReset=latest
#\u662F\u5426\u81EA\u52A8commit
spring.kafka.consumer.autoCommit=false
#\u81EA\u52A8commit\u95F4\u9694
spring.kafka.consumer.autoCommitInterval=1000
#\u5206\u7EC4
spring.kafka.consumer.groupId=${spring.application.name}-consumer-gid
#\u5BA2\u6237\u7AEFId
spring.kafka.consumer.clientId=${spring.application.name}-consumer-cid
#AckMode\u4E3ACOUNT_TIME\u6216COUNT\u662F\u9650\u5236\u6700\u591A\u672A\u63D0\u4EA4offset\u7684\u6570\u91CF
spring.kafka.consumer.ackCount=1000
#AckMode\u4E3ACOUNT_TIME\u6216TIME\u65F6\u8BBE\u7F6E\u591A\u4E45commit\u4E00\u6B21
spring.kafka.consumer.ackTime=2000
#\u6D88\u8D39\u7EBF\u7A0B\u7684\u6570\u91CF
spring.kafka.consumer.concurrency=2
#\u4E00\u6B21\u4ECEkafka\u4E2Dpoll\u51FA\u6765\u7684\u6570\u636E\u6761\u6570
#max.poll.records\u6761\u6570\u636E\u9700\u8981\u5728\u5728session.timeout.ms\u8FD9\u4E2A\u65F6\u95F4\u5185\u5904\u7406\u5B8C
spring.kafka.consumer.maxPollRecords=50
#poll\u8D85\u65F6\u65F6\u95F4
spring.kafka.consumer.maxPollIntervalMs=10000
#\u670D\u52A1\u7AEFpoll\u8D85\u65F6\u65F6\u95F4\u8BBE\u7F6E
spring.kafka.consumer.pollTimeout=300000
#\u662F\u5426\u6279\u91CF\u6D88\u8D39
spring.kafka.consumer.batchListener=true
#Consumer session \u8FC7\u671F\u65F6\u95F4\u3002\u8FD9\u4E2A\u503C\u5FC5\u987B\u8BBE\u7F6E\u5728broker configuration\u4E2D\u7684group.min.session.timeout.ms \u4E0E group.max.session.timeout.ms\u4E4B\u95F4\u3002
#\u9ED8\u8BA4\u4E3A10000ms
spring.kafka.consumer.sessionTimeout=15000
#\u6D88\u606F\u53D1\u9001\u7684\u6700\u957F\u7B49\u5F85\u65F6\u95F4.\u9700\u5927\u4E8Esession.timeout.ms\u8FD9\u4E2A\u65F6\u95F4,\u9ED8\u8BA4305000
spring.kafka.consumer.requestInterValMs=305000 
#server\u53D1\u9001\u5230\u6D88\u8D39\u7AEF\u7684\u6700\u5C0F\u6570\u636E\uFF0C\u82E5\u662F\u4E0D\u6EE1\u8DB3\u8FD9\u4E2A\u6570\u503C\u5219\u4F1A\u7B49\u5F85\u76F4\u5230\u6EE1\u8DB3\u6307\u5B9A\u5927\u5C0F\u3002\u9ED8\u8BA4\u4E3A1\u8868\u793A\u7ACB\u5373\u63A5\u6536\u3002
spring.kafka.consumer.fetchMinBytes=1
#\u82E5\u662F\u4E0D\u6EE1\u8DB3fetch.min.bytes\u65F6\uFF0C\u7B49\u5F85\u6D88\u8D39\u7AEF\u8BF7\u6C42\u7684\u6700\u957F\u7B49\u5F85\u65F6\u95F4
spring.kafka.consumer.fetchWaitMax=1000
#\u5FC3\u8DF3\u95F4\u9694\u3002\u5FC3\u8DF3\u662F\u5728consumer\u4E0Ecoordinator\u4E4B\u95F4\u8FDB\u884C\u7684\u3002\u8FD9\u4E2A\u503C\u5FC5\u987B\u8BBE\u7F6E\u7684\u5C0F\u4E8Esession.timeout.ms\uFF0C\u56E0\u4E3A\uFF1A
#\u5F53Consumer\u7531\u4E8E\u67D0\u79CD\u539F\u56E0\u4E0D\u80FD\u53D1Heartbeat\u5230coordinator\u65F6\uFF0C\u5E76\u4E14\u65F6\u95F4\u8D85\u8FC7session.timeout.ms\u65F6\uFF0C\u5C31\u4F1A\u8BA4\u4E3A\u8BE5consumer\u5DF2\u9000\u51FA
#\u901A\u5E38\u8BBE\u7F6E\u7684\u503C\u8981\u4F4E\u4E8Esession.timeout.ms\u76841/3\u3002\u9ED8\u8BA4\u503C\u662F\uFF1A3000 \uFF083s\uFF09
spring.kafka.consumer.heartbeatIntervalMs=5000
uwb.queue.thread.number=4


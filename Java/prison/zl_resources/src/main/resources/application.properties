server.ip=192.168.10.232
mysql.port=3306
redis.password=uwb!2018@0511_zl
redis.port=6379
#服务名
spring.application.name: resources
#服务端口
server.port=8801
#统一控制接口前缀
server.context-path=/prison

########################################################
###datasource
########################################################
spring.datasource.url=jdbc:mysql://${server.ip}:${mysql.port}/prison?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

# 连接池配置,下面配置说明请参考Druid Github Wiki，配置_DruidDataSource参考配置
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20

# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙（防止SQL注入）
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#spring.datasource.logSlowSql=true
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


#######################################################
###tk.mybatis
#######################################################
mapper.mappers=com.zhilutec.common.mappers.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
#mybatis mapper
mybatis.mapper-locations=classpath:dao/*.xml
#mybatis config 指定配置文件路径
mybatis.config-location=classpath:mybatis/config.xml
#mybatis.executorType=simple
mybatis.type-aliases-package=com.zhilutec.db.entities
mybatis.type-handlers-package=com.zhilutec.db.daos

#######################################################
###tpageHelper
#######################################################
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#######################################################
###logger
#######################################################
#logging.level.tk.mybatis=TRACE
#日志输出级别
#日志配置文件
#logging.config=classpath:logback.xml

#######################################################
###Redis
#######################################################
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=1
# Redis服务器地址
spring.redis.host=${server.ip}
# Redis服务器连接端口
spring.redis.port=${redis.port}
# Redis服务器连接密码（默认为空）
spring.redis.password=${redis.password}
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=2
# 连接超时时间（毫秒）
spring.redis.timeout=0

